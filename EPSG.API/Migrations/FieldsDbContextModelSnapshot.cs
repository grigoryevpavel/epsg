// <auto-generated />
using EPSG.API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EPSG.API.Migrations
{
    [DbContext(typeof(FieldsDbContext))]
    partial class FieldsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EPSG.API.Models.Field", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Size")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Fields");
                });

            modelBuilder.Entity("EPSG.API.Models.LocationPoint", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<double>("Lat")
                        .HasColumnType("double precision");

                    b.Property<double>("Lng")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("LocationPoints");
                });

            modelBuilder.Entity("EPSG.API.Models.Locations", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.PrimitiveCollection<double[]>("Center")
                        .IsRequired()
                        .HasColumnType("double precision[]");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("EPSG.API.Models.LocationPoint", b =>
                {
                    b.HasOne("EPSG.API.Models.Locations", null)
                        .WithMany("Polygon")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EPSG.API.Models.Locations", b =>
                {
                    b.HasOne("EPSG.API.Models.Field", null)
                        .WithOne("Locations")
                        .HasForeignKey("EPSG.API.Models.Locations", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EPSG.API.Models.Field", b =>
                {
                    b.Navigation("Locations")
                        .IsRequired();
                });

            modelBuilder.Entity("EPSG.API.Models.Locations", b =>
                {
                    b.Navigation("Polygon");
                });
#pragma warning restore 612, 618
        }
    }
}
